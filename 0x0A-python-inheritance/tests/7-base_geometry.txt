"""
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
 class for geometry operations.

Public instance method: def area(self): that raises an Exception with the message area() is not implemented
Public instance method: def integer_validator(self, name, value): that validates value:
you can assume name is always a string if value is not an integer: raise a TypeError exception, with the message <name> must be an integer
if value is less or equal to 0: raise a ValueError exception with the message <name> must be greater than 0

Example:
>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
   ...
Exception: area() is not implemented

>>> bg.integer_validator("positive_value", 42)

>>> bg.integer_validator("not_an_integer", "invalid_value")
Traceback (most recent call last):
    ...
TypeError: invalid_value must be an integer

>>> bg.integer_validator("negative_value", -5)
Traceback (most recent call last):
    ...
ValueError: negative_value must be greater than 0
"""
